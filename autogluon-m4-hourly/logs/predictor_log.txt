Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to '/Users/evakhromeeva/Projects/parkinson-disease-eeg/autogluon-m4-hourly'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.10
Operating System:   Darwin
Platform Machine:   arm64
Platform Version:   Darwin Kernel Version 23.6.0: Mon Jul 29 21:14:21 PDT 2024; root:xnu-10063.141.2~1/RELEASE_ARM64_T8103
CPU Count:          8
GPU Count:          0
Memory Avail:       5.44 GB / 16.00 GB (34.0%)
Disk Space Avail:   121.94 GB / 460.43 GB (26.5%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': 'light',
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 48,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 148060 rows, 200 time series. Median time series length is 700 (min=700, max=960). 

Provided data contains following columns:
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2024-12-01 22:19:43
Models that will be trained: ['Naive', 'SeasonalNaive', 'RecursiveTabular', 'DirectTabular', 'ETS', 'Theta', 'Chronos[bolt_small]', 'TemporalFusionTransformer']
Training timeseries model Naive. Training for up to 65.8s of the 591.8s of remaining time.
	-6.6629       = Validation score (-MASE)
	0.12    s     = Training runtime
	2.07    s     = Validation (prediction) runtime
Training timeseries model SeasonalNaive. Training for up to 73.7s of the 589.6s of remaining time.
	-1.2169       = Validation score (-MASE)
	0.09    s     = Training runtime
	0.09    s     = Validation (prediction) runtime
Training timeseries model RecursiveTabular. Training for up to 84.2s of the 589.4s of remaining time.
	-0.9339       = Validation score (-MASE)
	9.88    s     = Training runtime
	0.92    s     = Validation (prediction) runtime
Training timeseries model DirectTabular. Training for up to 96.4s of the 578.6s of remaining time.
	-1.2921       = Validation score (-MASE)
	7.49    s     = Training runtime
	0.34    s     = Validation (prediction) runtime
Training timeseries model ETS. Training for up to 114.2s of the 570.8s of remaining time.
	-1.9654       = Validation score (-MASE)
	0.10    s     = Training runtime
	14.56   s     = Validation (prediction) runtime
Training timeseries model Theta. Training for up to 139.0s of the 556.1s of remaining time.
	-2.1425       = Validation score (-MASE)
	0.10    s     = Training runtime
	11.01   s     = Validation (prediction) runtime
Training timeseries model Chronos[bolt_small]. Training for up to 181.7s of the 545.0s of remaining time.
	-0.8121       = Validation score (-MASE)
	5.28    s     = Training runtime
	26.05   s     = Validation (prediction) runtime
Training timeseries model TemporalFusionTransformer. Training for up to 256.8s of the 513.6s of remaining time.
	-2.5627       = Validation score (-MASE)
	228.23  s     = Training runtime
	0.18    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'Chronos[bolt_small]': 0.74, 'DirectTabular': 0.04, 'ETS': 0.02, 'RecursiveTabular': 0.19}
	-0.7915       = Validation score (-MASE)
	0.41    s     = Training runtime
	41.88   s     = Validation (prediction) runtime
Training complete. Models trained: ['Naive', 'SeasonalNaive', 'RecursiveTabular', 'DirectTabular', 'ETS', 'Theta', 'Chronos[bolt_small]', 'TemporalFusionTransformer', 'WeightedEnsemble']
Total runtime: 311.25 s
Best model: WeightedEnsemble
Best model score: -0.7915
